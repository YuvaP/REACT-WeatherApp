{"ast":null,"code":"var _jsxFileName = \"C:\\\\yuva\\\\yuvaReactProjects\\\\reactWeatherApp\\\\weatherappreact\\\\src\\\\Weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\nimport WeatherCard from './WeatherCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  const [searchValue, setSearchValue] = useState(\"Santa Clara\");\n  const [newWeatherInfo, setNewWeatherInfo] = useState({});\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n\n  const getWeatherInfo = async () => {\n    try {\n      let api_key = process.env.API_KEY;\n      const api_url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=imperial&appid=859173d15e3462bf37fb216800794adb`;\n      const fetch_response = await fetch(api_url);\n      const json_data = await fetch_response.json();\n      console.log(\"hello\");\n      const {\n        temp,\n        temp_min,\n        temp_max\n      } = json_data.main;\n      const {\n        description\n      } = json_data.weather[0];\n      const {\n        speed\n      } = json_data.wind;\n      const {\n        name: place\n      } = json_data;\n      const myNewWeatherInfo = {\n        temp,\n        temp_min,\n        temp_max,\n        description,\n        speed\n      };\n      const api_url1 = 'https://api.covid19api.com/summary';\n      const fetch_response1 = await fetch(api_url1);\n      const json_data1 = await fetch_response1.json();\n      console.log(myNewWeatherInfo);\n      setNewWeatherInfo(myNewWeatherInfo);\n      console.log(newWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"box\",\n        id: \"myplace\",\n        placeholder: \"Type City Name Here...\",\n        autoFocus: true,\n        value: searchValue,\n        onChange: e => setSearchValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: getWeatherInfo,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            children: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      newWeatherInfo: newWeatherInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Weather, \"w9Cax5xspCxwgFXj7xRIk0gRHHk=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","WeatherCard","Weather","searchValue","setSearchValue","newWeatherInfo","setNewWeatherInfo","getWeatherInfo","api_key","process","env","API_KEY","api_url","fetch_response","fetch","json_data","json","console","log","temp","temp_min","temp_max","main","description","weather","speed","wind","name","place","myNewWeatherInfo","api_url1","fetch_response1","json_data1","error","e","target","value"],"sources":["C:/yuva/yuvaReactProjects/reactWeatherApp/weatherappreact/src/Weather.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './style.css';\r\nimport WeatherCard from './WeatherCard';\r\n\r\nconst Weather = () => {\r\n  const [searchValue, setSearchValue] = useState(\"Santa Clara\");\r\n  const [newWeatherInfo, setNewWeatherInfo] = useState({});\r\n\r\n  useEffect(()=>{\r\n    getWeatherInfo();\r\n  },[]);\r\n\r\n  const getWeatherInfo = async ()=>{\r\n    try{\r\n      let api_key=process.env.API_KEY;\r\n      const api_url=`https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=imperial&appid=859173d15e3462bf37fb216800794adb`\r\n      const fetch_response=await fetch(api_url);\r\n      const json_data = await fetch_response.json();\r\n      \r\n      console.log(\"hello\");\r\n      const {temp, temp_min,temp_max} = json_data.main;\r\n      const {description} = json_data.weather[0];\r\n      const {speed} = json_data.wind;\r\n      const {name:place} = json_data; \r\n      \r\n\r\n      const myNewWeatherInfo = {\r\n        temp, temp_min, temp_max, description, speed,\r\n        \r\n      };\r\n\r\n\r\n      const api_url1 = 'https://api.covid19api.com/summary';\r\n      const fetch_response1=await fetch(api_url1);\r\n      const json_data1 = await fetch_response1.json();\r\n\r\n      console.log(myNewWeatherInfo);\r\n      setNewWeatherInfo(myNewWeatherInfo);\r\n      console.log(newWeatherInfo);\r\n     \r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n  } ;\r\n\r\n \r\n\r\n  return (\r\n<>\r\n    <div className='searchbox'>\r\n      <input type='text' name='box' id=\"myplace\" placeholder='Type City Name Here...' autoFocus\r\n      value={searchValue} \r\n      onChange={(e)=>setSearchValue(e.target.value)}\r\n     \r\n     />\r\n              \r\n      <div className='btn'>\r\n        <button type='submit' onClick={getWeatherInfo}><i className='material-icons'>search</i></button>\r\n      </div>\r\n    </div>\r\n\r\n    <WeatherCard newWeatherInfo={newWeatherInfo} />\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Weather;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,aAAD,CAA9C;EACA,MAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;EAEAC,SAAS,CAAC,MAAI;IACZO,cAAc;EACf,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMA,cAAc,GAAG,YAAU;IAC/B,IAAG;MACD,IAAIC,OAAO,GAACC,OAAO,CAACC,GAAR,CAAYC,OAAxB;MACA,MAAMC,OAAO,GAAE,qDAAoDT,WAAY,wDAA/E;MACA,MAAMU,cAAc,GAAC,MAAMC,KAAK,CAACF,OAAD,CAAhC;MACA,MAAMG,SAAS,GAAG,MAAMF,cAAc,CAACG,IAAf,EAAxB;MAEAC,OAAO,CAACC,GAAR,CAAY,OAAZ;MACA,MAAM;QAACC,IAAD;QAAOC,QAAP;QAAgBC;MAAhB,IAA4BN,SAAS,CAACO,IAA5C;MACA,MAAM;QAACC;MAAD,IAAgBR,SAAS,CAACS,OAAV,CAAkB,CAAlB,CAAtB;MACA,MAAM;QAACC;MAAD,IAAUV,SAAS,CAACW,IAA1B;MACA,MAAM;QAACC,IAAI,EAACC;MAAN,IAAeb,SAArB;MAGA,MAAMc,gBAAgB,GAAG;QACvBV,IADuB;QACjBC,QADiB;QACPC,QADO;QACGE,WADH;QACgBE;MADhB,CAAzB;MAMA,MAAMK,QAAQ,GAAG,oCAAjB;MACA,MAAMC,eAAe,GAAC,MAAMjB,KAAK,CAACgB,QAAD,CAAjC;MACA,MAAME,UAAU,GAAG,MAAMD,eAAe,CAACf,IAAhB,EAAzB;MAEAC,OAAO,CAACC,GAAR,CAAYW,gBAAZ;MACAvB,iBAAiB,CAACuB,gBAAD,CAAjB;MACAZ,OAAO,CAACC,GAAR,CAAYb,cAAZ;IAED,CA3BD,CA2BC,OAAM4B,KAAN,EAAY;MACXhB,OAAO,CAACC,GAAR,CAAYe,KAAZ;IACD;EACF,CA/BD;;EAmCA,oBACF;IAAA,wBACI;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,KAAxB;QAA8B,EAAE,EAAC,SAAjC;QAA2C,WAAW,EAAC,wBAAvD;QAAgF,SAAS,MAAzF;QACA,KAAK,EAAE9B,WADP;QAEA,QAAQ,EAAG+B,CAAD,IAAK9B,cAAc,CAAC8B,CAAC,CAACC,MAAF,CAASC,KAAV;MAF7B;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAK,SAAS,EAAC,KAAf;QAAA,uBACE;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAE7B,cAA/B;UAAA,uBAA+C;YAAG,SAAS,EAAC,gBAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAA/C;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAaI,QAAC,WAAD;MAAa,cAAc,EAAEF;IAA7B;MAAA;MAAA;MAAA;IAAA,QAbJ;EAAA,gBADE;AAiBD,CA5DD;;GAAMH,O;;KAAAA,O;AA8DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}